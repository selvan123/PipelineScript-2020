node
{
     
	
	stage('Deploy to Tomcat')
    {
	deploy adapters: [tomcat8(credentialsId: 'tomcat', path: '', url: 'http://10.0.2.197:8080/')], contextPath: '/petclinic', war: '**/*.war'  
    }
	stage('Selenium Testing')
    {
        git url: 'https://github.com/selvan123/petclinic.git'
        sh "cd /root/.jenkins/workspace/Petclinic/TestCases"
        wrap([$class: 'Xvfb', displayNameOffset: 0, installationName: 'Xvfb', screen: '1600x1200x32']) 
        {
            sh "sudo bash"
            sh "mvn test"
        }
        
    }
    
    
    stage('Performance testing')
    {
        sh "sudo bash"
		sh "rm -rf /root/.jenkins/workspace/Petclinic/Petclinic.jmx"
		sh "rm -rf /root/.jenkins/workspace/Petclinic/Petclinic.jtl"
		sh "rm -rf /root/.jenkins/workspace/Petclinic/Petclinic.xml"
		sh "wget https://labassets.s3-us-west-2.amazonaws.com/Dependencies/Jenkins/Job/Petclinic.jmx"
		sh "sudo /home/ec2-user/jMeter/apache-jmeter-5.1.1/bin/jmeter.sh -Jjmeter.save.saveservice.output_format=xml -n -t /root/.jenkins/workspace/Petclinic/Petclinic.jmx -l Petclinic.jtl"
        
    }
	
    stage('Security Testing using ZAP')
    {
        sh "cd /var/lib/docker"
	sh "rm -rf elb-petclinic-dns*"
	sh "wget  https://labassets.s3-us-west-2.amazonaws.com/Dependencies/Rundeck/elb-petclinic-dns.txt"
        sh "sudo docker run -t owasp/zap2docker-weekly zap-baseline.py -t \$(head -n 1 elb-petclinic-dns.txt) || true"
        
    }  
    
}
